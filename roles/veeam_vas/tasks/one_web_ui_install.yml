---
# one_web_ui_install tasks file for veeamhub.veeam_vas
- name: Including version-specific variables
  include_vars:
    file: "vars/one_v{{ version }}.yml"

# PRE-INSTALL TASKS
- name: Veeam ONE ISO Tasks
  include_tasks: mount_iso.yml
- name: Print Installation Configuration
  debug:
    msg:
      - "Installation Source: '{{ source }}'"
      - "Installation Logs Folder: '{{ destination }}logs'"
      - "Version: {{ version }}"
      - "Download ISO?: {{ iso_download }}"
      - "ISO Source: {{ iso_url }}"
      - "ISO File Destination: {{ destination }}{{ destination_iso_file }}"
      - "SQL Instance: {{ sql_instance }}"
      - "SQL Database: {{ sql_database }}"
      - "Veeam ONE Service Account: {{ one_username }}"
      - "Veeam ONE SQL Account: {{ one_username }}"
      - "Veeam ONE Installation Type: {{ one_installation_type }}"
- name: Including Veeam ONE Common Pre-Install tasks
  include_tasks: one_install_pretasks.yml


# INSTALLING VEEAM SOFTWARE
- name: Install ONE Reporter Web UI
  ansible.windows.win_package:
    path: "{{ source }}Reporter\\VeeamONE.Reporter.WebUI.x64.msi"
    state: present
    arguments: '/L*v "{{ destination }}logs\\VeeamONE.Reporter.WebUI.x64.log" ACCEPT_THIRDPARTY_LICENSES=1 ACCEPT_EULA=1 VM_RP_SERVICEACCOUNT="{{ one_username }}" VM_RP_SERVICEPASSWORD="{{ one_password }}" VM_RP_SQL_SERVER="{{ sql_instance }}" VM_RP_SQL_DATABASE="{{ sql_database }}" VM_RP_SQL_AUTHENTICATION=0 VM_RP_SQL_USER="{{ one_username }}" VM_RP_SQL_PASSWORD="{{ one_password }}" VO_INSTALLATION_TYPE="{{ one_installation_type }}"'
- name: Finding file(s) in '{{ source }}Updates' directory
  ansible.windows.win_find:
    paths: "{{ source }}Updates"
    recurse: no
    file_type: file
  ignore_errors: yes
  register: file
- name: Does Veeam ONE need to be patched?
  set_fact:
    patch: "{{ file.matched }}"
- name: Setting patch filename
  set_fact:
    patch_file: "{{ file.files[0].filename }}"
  when: patch | bool
- name: Including Veeam ONE patch tasks
  include_tasks: one_patch.yml
  when: patch | bool

# POST-INSTALL TASKS
- name: Unmount ISO
  community.windows.win_disk_image:
    image_path: "{{ destination }}{{ destination_iso_file }}"
    state: absent